name: "Tests, linter, build"

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

jobs:
  test:
    services:
        postgres:
            image: postgres
        env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: musicexpress
        ports:
            5432:5432
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.15.x'
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test project
        run: |
            psql -U postgres -d musicexpress -f postgres/initDB.sql -h $POSTGRES_HOST
            make tests
    env:
        POSTGRES_HOST: postgres
        POSTGRES_PORT: ${{ job.services.ports[5432] }}
        PGPASSWORD: postgres
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.15.x'

      - name: Check out code
        uses: actions/checkout@v2

      - name: Lint Go Code
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go get github.com/golangci/golangci-lint/cmd/golangci-lint
          make linter
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build Docker image
        run: docker build .
